package c7j.net.storiosampleapp.model;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteColumn;
import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteType;

import c7j.net.storiosampleapp.tables.TweetsTable;


@StorIOSQLiteType(table = TweetsTable.TABLE)
public class Tweet {


    @Nullable
    @StorIOSQLiteColumn(name = TweetsTable.COLUMN_ID, key = true)
    Long id;

    @NonNull
    @StorIOSQLiteColumn(name = TweetsTable.COLUMN_AUTHOR)
    String author;

    @NonNull
    @StorIOSQLiteColumn(name = TweetsTable.COLUMN_CONTENT)
    String content;


    Tweet() {}  // Default constructor for AutoGenerated code!


    private Tweet(@Nullable Long id, @NonNull String author, @NonNull String content) {
        this.id = id;
        this.author = author;
        this.content = content;
    }


    @NonNull
    public static Tweet newTweet(@Nullable Long id, @NonNull String author, @NonNull String content) {
        return new Tweet(id, author, content);
    }


    @NonNull
    public static Tweet newTweet(@NonNull String author, @NonNull String content) {
        return new Tweet(null, author, content);
    }


    @Nullable public Long id() {  return id;  }

    @NonNull public String author() {    return author;  }

    @NonNull public String content() {   return content; }


    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;

        Tweet tweet = (Tweet) obj;

        if (id != null ? !id.equals(tweet.id) : tweet.id != null) return false;
        if (!author.equals(tweet.author)) return false;
        return content.equals(tweet.content);
    }


    @Override
    public int hashCode() {
        int result = id != null ? id.hashCode() : 0;
        result = 31 * result + author.hashCode();
        result = 31 * result + content.hashCode();
        return result;
    }


    @Override
    public String toString() {
        return "Tweet{" +
                "id=" + id +
                ", author='" + author + '\'' +
                ", content='" + content + '\'' +
                '}';
    }

}
